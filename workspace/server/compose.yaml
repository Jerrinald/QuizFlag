# version: '3.8'

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: symfony_app
#     restart: unless-stopped
#     volumes:
#       - .:/var/www/html
#       - symfony_bundles:/var/www/html/public/bundles
#     networks:
#       - symfony_network
#     ports:
#       - "8081:8081"

#   web:
#     image: nginx:latest
#     container_name: symfony_web
#     restart: unless-stopped
#     ports:
#       - "8080:80"
#     volumes:
#       - .:/var/www/html
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#     networks:
#       - symfony_network

#   db:
#     image: postgres:13
#     container_name: symfony_db
#     restart: unless-stopped
#     environment:
#       POSTGRES_DB: symfony
#       POSTGRES_USER: symfony
#       POSTGRES_PASSWORD: symfony
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     networks:
#       - symfony_network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U symfony"]
#       interval: 30s
#       timeout: 10s
#       retries: 5

#   adminer:
#     image: adminer
#     restart: unless-stopped
#     ports:
#       - "8088:8080"
#     networks:
#       - symfony_network

# volumes:
#   db_data:
#   symfony_bundles:

# networks:
#   symfony_network:
#     driver: bridge


version: "3.4"

services:
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-symfony}:${POSTGRES_PASSWORD:-symfony}@database:5432/${POSTGRES_DB:-symfony}?serverVersion=${POSTGRES_VERSION:-15}

  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: symfony
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data:rw

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8088:8080
# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  ###> doctrine/doctrine-bundle ###
  db_data:
  ###< doctrine/doctrine-bundle ###
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
